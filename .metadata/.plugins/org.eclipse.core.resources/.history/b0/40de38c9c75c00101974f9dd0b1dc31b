package com.blogaura.service;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.crypto.SecretKey;

import org.springframework.stereotype.Service;

import com.blogaura.entity.User;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Service
public class JwtService {
	
	// Secret Key
	private String secretKey = null;
	
	public String getSecretKey() {
		return secretKey = "0V5D627rpDxNkHV/XPSx5pOiGPMvRrxkzIlb0AOH7uo=";
	}
	
	private SecretKey generateKey() {
		byte[] decode = Decoders.BASE64.decode(getSecretKey());
		return Keys.hmacShaKeyFor(decode);
	}
	
	public String generateToken(User user) {
		Map<String, Object> claims = new HashMap<>();
		return Jwts
					.builder()
					.claims()
					.add(claims)
					.subject(user.getUserName())
					.issuer("YB")
					.issuedAt(new Date(System.currentTimeMillis()))
					.expiration(new Date(System.currentTimeMillis() + 60*10*1000))
					.and()
					.signWith(generateKey())
					.compact();
					
	}
}
