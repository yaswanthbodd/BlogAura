package com.blogaura.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.blogaura.entity.User;
import com.blogaura.repository.UserRepository;

@Service
public class UserService {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private BCryptPasswordEncoder bCryptPasswordEncoder;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private JwtService jwtService;
	
	@Autowired
	private UserDetails userDetails;
	
	public User register(User user, MultipartFile imageFile) throws Exception {
		
		if((userDetails.getUsername().equals(user.getUserName()))) {
			throw new Exception("User Already Existed");
		}
		
		user.setImageName(imageFile.getOriginalFilename());
		user.setImageType(imageFile.getContentType());
		user.setImageData(imageFile.getBytes());
		user.setPassword(bCryptPasswordEncoder.encode(user.getPassword()));
		return userRepository.save(user);
	}
	
	public String verify(User user) {
		Authentication authentication = authenticationManager.authenticate(
						new UsernamePasswordAuthenticationToken(user.getUserName(), user.getPassword())
				);
		if(authentication.isAuthenticated())
			return jwtService.generateToken(user);
		return "Failure";
	}
	
	//Get All User Details
	public List<User> getAllUsers(){
		return userRepository.findAll();
	}
}
